@using StockManagementWebApplication.Enums
@model IEnumerable<StockManagementWebApplication.Models.Entities.Item>

@{
    ViewData["Title"] = "Index";
}

<h1>Items</h1>
 @if (this.User.IsInRole(RoleEnum.Manager.ToString()))
{
    <p>
        <a class="btn btn-primary" asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rate)
            </th>
            @if (this.User.IsInRole(RoleEnum.Manager.ToString()))
            {
                 <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            }
           
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rate)
                </td>
                @if (this.User.IsInRole(RoleEnum.Manager.ToString()))
                {
                     <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                }
               
                <td>
                    @if (this.User.IsInRole(RoleEnum.Manager.ToString()))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
                                 <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                     }
                    else
                    {
               <a class="btn btn-primary" asp-controller="Cart" asp-action="Add" asp-route-id="@item.Id">Add To Cart</a> 

                    }
                    
                </td>
            </tr>
        }
    </tbody>
</table>
